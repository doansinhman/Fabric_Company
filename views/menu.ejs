<!DOCTYPE html>
<html>

<head>
    <title>
        <%= title %>
    </title>
    <% include ./include/header %>
</head>

<body>
    <!-- <% include ./include/navBarUser %> -->
    <form class="form-inline" name="search" action="javascript:void()" onsubmit="searchProduct();">
        <div class="col-3">
            <div class="custom-control custom-radio">
                <input type="radio" class="custom-control-input" id="productName" name="searchOption" value="productName" checked>
                <label class="custom-control-label" for="productName">T√¨m theo t√™n</label>
            </div>
            <div class="custom-control custom-radio">
                <input type="radio" class="custom-control-input" id="courtName" name="searchOption" value="courtName">
                <label class="custom-control-label" for="courtName">T√¨m theo m√†u s·∫Øc</label>
            </div>
            <div class="custom-control custom-radio">
                <input type="radio" class="custom-control-input" id="productType" name="searchOption" value="productType">
                <label class="custom-control-label" for="productType">T√¨m theo m·∫´u</label>
            </div>
        </div>
        <div class="col-9">
            <input class="form-control mr-sm-2" type="text" name="searchText" placeholder="Search">
            <button class="btn btn-success" type="submit">Search</button>
        </div>
    </form>

    <!-- <div class="container"> -->
    <ul id="productList" class="row">
        <li class="list-group-item" id="1">
            <img src="/images/product/1.jpg" class="mx-auto d-block productImage">
            <p class="text-center productName">CARO BAMBOOTEX BT1801</p>
            <p class="productDescription">M√¥ t·∫£: Kh√°ng khu·∫©n; Ch·ªëng tia UV; M·ªÅm m∆∞·ªõt, tho√°ng m√°t; √çt nhƒÉn, d·ªÖ gi·∫∑t ·ªßi.</p>
            <p class="productColor">M√†u: Tr·∫Øng, Xanh d∆∞∆°ng</p>
            <p class="productType">Lo·∫°i: Nh·∫≠p kh·∫©u</p>
            <p class="productForm">M·∫´u m√£: 50% Bamboo, 50% Micro Fiber. Kh·ªï v·∫£i: 1m5</p>
            <p class="productSupplier">Nh√† cung c·∫•p: Fabric Company</p>
            <p class="productQuantity">C√≥ s·∫µn: 100</p>
            <p class="productUnit">ƒê∆°n v·ªã: met</p>
            <p class="productUnitPrice">Gi√°: 50.000</p>
            <p class="text-center"><button class="btn btn-primary" onclick="addproduct(this);">‚úî Th√™m v√†o gi·ªè h√†ng</button></p>
        </li>
    </ul>
    <!-- </div> -->


    <div id="cart" onclick="showCart();">
        üõí
    </div>

    <div id="myModal" class="modal">

        <!-- Modal content -->
        <div class="modal-content">
            <div>
                <h5>Gi·ªè h√†ng</h5>
            </div>
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>S·ªë l∆∞·ª£ng</th>
                        <th>ƒê∆°n v·ªã</th>
                        <th>ƒê∆°n gi√°</th>
                        <th>Th√†nh ti·ªÅn</th>
                    </tr>
                </thead>
                <tbody id="productChosen">
                    <tr>
                        <td>1</td>
                        <td>C∆°m</td>
                        <td>2</td>
                        <td>Dƒ©a</td>
                        <td>10000</td>
                        <td>20000</td>
                    </tr>

                    <tr class="table-primary">
                        <td>T·ªïng c·ªông</td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td>20000</td>
                    </tr>
                </tbody>
            </table>
            <div id='address' class='form-group'></div>
            <div>
                <button class="btn btn-primary" onclick="orderCart();">ƒê·∫∑t h√†ng</button>
                <button class="btn btn-danger" onclick="deleteCart();">X√≥a gi·ªè h√†ng</button>
                <button class="btn btn-secondary" onclick="closeModal();">H·ªßy</button>
            </div>
        </div>

    </div>
</body>
<script>
    var PRODUCT = {};
    class ListItem {
        constructor(id) {
            this.id = id;
            this.htmlCode = '';
        }
        addCode(code) {
            this.htmlCode += '\t' + code;
        }
        getCode() {
            return '<li class="list-group-item" id="' + this.id + '">\n' + this.htmlCode + '</li>';
        }
    }

    function renderProduct(arr) {
        let productList = $("#productList");
        productList.empty();
        arr.forEach(pro => {
            PRODUCT[pro.id] = pro;
            let li = new ListItem(pro.id);
            li.addCode('<img src="/images/product/' + pro.id + pro.image + '" class="mx-auto d-block productImage">');
            li.addCode('<p class="text-center productName">' + pro.name + '</p>');
            li.addCode('<p class="productDescription">M√¥ t·∫£: ' + pro.description + '</p>');
            li.addCode('<p class="productColor">M√†u: ' + pro.color + '</p>');
            li.addCode('<p class="productType">Lo·∫°i: ' + pro.type + '</p>');
            li.addCode('<p class="productForm">M·∫´u m√£: ' + pro.form + '</p>');
            li.addCode('<p class="productSupplier"> Nh√† cung c·∫•p: ' + pro.supplier + '</p>');
            li.addCode('<p class="productQuantity">C√≥ s·∫µn: ' + pro.quantity + '</p>');
            li.addCode('<p class="productUnit">ƒê∆°n v·ªã: ' + pro.unit + '</p>');
            li.addCode('<p class="productUnitPrice">ƒê∆°n gi√°: ' + formatCurrency(pro.unitPrice, '') + ' VNƒê</p>');
            li.addCode('<p class="text-center"><button class="btn btn-primary" onclick="addProduct(' + pro.id + ');">‚úî Th√™m v√†o gi·ªè h√†ng</button></p>')
            productList.append(li.getCode());
        });
    }

    function searchProduct() {
        //Not be in used
        if (document.search.searchOption.value && document.search.searchText.value != '') {
            let searchOption = document.search.searchOption.value;
            $.post("/product", {
                    target: searchOption,
                    value: document.search.searchText.value
                },
                function(arr, status) {
                    //console.log(arr);
                    if (status == 'success' && arr) {
                        renderproduct(arr);
                    }
                });
        }
    }

    function getAllProduct() {
        $.post("/api/product", {
                target: "all"
            },
            function(arr, status) {
                //console.log(arr);
                if (status == 'success' && arr) {
                    renderProduct(arr);
                }
            });
    }

    function addProduct(id) {
        let cartString = localStorage.getItem("cart");
        let cart = {};
        try {
            cart = JSON.parse(cartString);
        } catch (e) {
            //alert('catch 1 err');
            cart = {};
        }
        if (!cart) {
            cart = {};
        }
        try {
            if (!cart["" + id]) {
                cart["" + id] = 1;
            } else {
                cart["" + id] -= -1;
            }
            localStorage.setItem("cart", JSON.stringify(cart));
        } catch (e) {
            //alert('catch 2 err');
            cart = {}
        }
    }

    function deleteCart() {
        localStorage.removeItem("cart");
        closeModal();
    }

    function showCart() {
        //updateCart();
        let cartString = localStorage.getItem("cart");
        let cart = {};
        try {
            cart = JSON.parse(cartString);

            if (!cart) {
                cart = {};
            }
            let productChosen = $("#productChosen");
            productChosen.empty();
            let amount = 0;
            let empty = true;
            for (let id in cart)
                if (cart[id] > 0) {
                    empty = false;
                    amount += PRODUCT[id].unitPrice * cart[id];
                    productChosen.append('<tr>\
                            <td>' + id + '</td>\
                            <td>' + PRODUCT[id].name + '</td>\
                            <td><input id="product' + id + '"type="number" onfocusout="updateCart();" min=0 value=' + cart[id] + '></input></td>\
                            <td>' + PRODUCT[id].unit + '</td>\
                            <td>' + formatCurrency(PRODUCT[id].unitPrice, '') + '</td>\
                            <td>' + formatCurrency(PRODUCT[id].unitPrice * cart[id], '') + '</td>\
                        </tr>');
                }
            if (empty) {
                productChosen.append('<tr class="table-warning"><td>Gi·ªè h√†ng r·ªóng</td><td></td><td></td><td></td><td></td><td></td></tr>');
            } else {
                productChosen.append('<tr class="table-primary">\
                                <td></td>\
                                <td></td>\
                                <td></td>\
                                <td></td>\
                                <td><strong>T·ªïng c·ªông</strong></td>\
                                <td><strong>' + formatCurrency(amount, '') + '</strong></td>\
                            </tr>');

                $('#address').html(addressFormGen());
            }
        } catch (e) {
            alert('catch 1 err');
            console.log(e);
            cart = {};
        }

        openModal();
    }

    function updateCart() {
        let cartString = localStorage.getItem("cart");
        let cart = {};
        try {
            cart = JSON.parse(cartString);

            if (!cart) {
                cart = {};
            }
            for (let key in cart) {
                cart[key] = document.getElementById('product' + key).value;
                if (cart[key] == 0) {
                    delete cart[key];
                }
            }

            localStorage.setItem("cart", JSON.stringify(cart));
        } catch (e) {
            //alert('catch 1 err');
            cart = {};
        }

        showCart();
    }

    function formatCurrency(n, currency) {
        return currency + n.toString().replace(/./g, function(c, i, a) {
            return i > 0 && c !== "." && (a.length - i) % 3 === 0 ? "," + c : c;
        });
    }

    function openModal() {
        // When the user clicks on <span> (x), close the modal
        modal.style.display = "block";
    }

    function closeModal() {
        // When the user clicks on <span> (x), close the modal
        modal.style.display = "none";
    }

    // Get the modal
    var modal = document.getElementById("myModal");
    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function(event) {
        if (event.target == modal) {
            modal.style.display = "none";
        }
    }
    $(document).ready(function() {
        // Get the modal
        var modal = document.getElementById("myModal");
        getAllProduct();
    });

    function orderCart() {
        let cart = localStorage.getItem('cart');
        if (!cart || cart == '{}') {
            return new swal('Th·∫•t b·∫°i', 'Gi·ªè h√†ng r·ªóng!', 'error');
        }
        let address = localStorage.getItem('address');
        if (!address) {
            return new swal('Th·∫•t b·∫°i', 'B·∫°n ch∆∞a nh·∫≠p ƒë·ªãa ch·ªâ giao h√†ng!', 'error');
        }
        let note = localStorage.getItem('note');
        $.post("/api/order/insert", {
                cart: cart,
                address: address,
                note: note
            },
            function(data, status) {
                if (data == true) {
                    new swal('Th√†nh c√¥ng', 'ƒê∆°n h√†ng c·ªßa b·∫°n ƒëang ch·ªù duy·ªát!', 'success');
                    localStorage.removeItem('cart');
                    localStorage.removeItem('address');
                    localStorage.removeItem('note');
                    closeModal();
                } else if (data == false) {
                    location.replace('/customer/login');
                } else {
                    new swal('Th·∫•t b·∫°i', data, 'error');
                }
            });
    }

    function addressFormGen() {
        address = localStorage.getItem('address');
        note = localStorage.getItem('note');
        let a = '',
            b = '';
        if (address)
            a = '<input type="text" class="form-control" placeholder="ƒê·ªãa ch·ªâ nh·∫≠n h√†ng" name="address" onfocusout="updateAddress(this);" value="' + address + '">';
        else a = '<input type="text" class="form-control" placeholder="ƒê·ªãa ch·ªâ nh·∫≠n h√†ng" name="address" onfocusout="updateAddress(this);">';
        if (note)
            b = '<input type="text" class="form-control" placeholder="Ghi ch√∫" name="note" onfocusout="updateNote(this);" value="' + note + '">';
        else b = '<input type="text" class="form-control" placeholder="Ghi ch√∫" name="note" onfocusout="updateNote(this);">';
        return a + b;
    }

    function updateAddress(ele) {
        localStorage.setItem('address', ele.value);
    }

    function updateNote(ele) {
        localStorage.setItem('note', ele.value);
    }
</script>

</html>